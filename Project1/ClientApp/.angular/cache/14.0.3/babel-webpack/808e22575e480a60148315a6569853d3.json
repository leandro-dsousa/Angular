{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lbsousa/Angular/Project1/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../card-display/card-display.component\";\nimport * as i3 from \"../basic-modal/basic-modal.component\";\n\nfunction HomeComponent_app_card_display_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-card-display\", 19);\n    i0.ɵɵlistener(\"click\", function HomeComponent_app_card_display_10_Template_app_card_display_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const post_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.setSelectedPost(post_r1));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"image\", post_r1.url._url);\n  }\n}\n\nexport class HomeComponent {\n  constructor() {\n    this.selected_post = {\n      id: '',\n      description: {\n        _description: ''\n      },\n      title: {\n        _title: ''\n      },\n      author: {\n        _author: ''\n      },\n      url: {\n        _url: ''\n      }\n    };\n    this.posts = [];\n  }\n\n  setSelectedPost(post) {\n    this.selected_post = post;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const response = fetch('https://localhost:44492/home', {\n        method: 'GET'\n      });\n\n      if (!(yield response).ok) {\n        throw new Error(`Error! status: ${(yield response).status}`);\n      }\n\n      const result = (yield response).json();\n      yield result.then(result => {\n        _this.posts = result;\n      });\n    })();\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)();\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 48,\n  vars: 5,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [3, \"Image\", \"Title\", \"Description\", \"Author\"], [1, \"panel\"], [3, \"image\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"accordionExample\", 1, \"accordion\"], [1, \"accordion-item\"], [\"id\", \"headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseOne\", \"aria-expanded\", \"true\", \"aria-controls\", \"collapseOne\", 1, \"accordion-button\"], [\"id\", \"collapseOne\", \"aria-labelledby\", \"headingOne\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [1, \"accordion-body\"], [\"id\", \"headingTwo\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseTwo\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseTwo\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseTwo\", \"aria-labelledby\", \"headingTwo\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [\"id\", \"headingThree\", 1, \"accordion-header\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#collapseThree\", \"aria-expanded\", \"false\", \"aria-controls\", \"collapseThree\", 1, \"accordion-button\", \"collapsed\"], [\"id\", \"collapseThree\", \"aria-labelledby\", \"headingThree\", \"data-bs-parent\", \"#accordionExample\", 1, \"accordion-collapse\", \"collapse\"], [3, \"image\", \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Document\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\");\n      i0.ɵɵelement(8, \"app-basic-modal\", 4);\n      i0.ɵɵelementStart(9, \"div\", 5);\n      i0.ɵɵtemplate(10, HomeComponent_app_card_display_10_Template, 1, 1, \"app-card-display\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 8)(13, \"h2\", 9)(14, \"button\", 10);\n      i0.ɵɵtext(15, \" Accordion Item #1 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 12)(18, \"strong\");\n      i0.ɵɵtext(19, \"This is the first item's accordion body.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n      i0.ɵɵelementStart(21, \"code\");\n      i0.ɵɵtext(22, \".accordion-body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \", though the transition does limit overflow. \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 8)(25, \"h2\", 13)(26, \"button\", 14);\n      i0.ɵɵtext(27, \" Accordion Item #2 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 15)(29, \"div\", 12)(30, \"strong\");\n      i0.ɵɵtext(31, \"This is the second item's accordion body.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(32, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n      i0.ɵɵelementStart(33, \"code\");\n      i0.ɵɵtext(34, \".accordion-body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(35, \", though the transition does limit overflow. \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"div\", 8)(37, \"h2\", 16)(38, \"button\", 17);\n      i0.ɵɵtext(39, \" Accordion Item #3 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 18)(41, \"div\", 12)(42, \"strong\");\n      i0.ɵɵtext(43, \"This is the third item's accordion body.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(44, \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \");\n      i0.ɵɵelementStart(45, \"code\");\n      i0.ɵɵtext(46, \".accordion-body\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(47, \", though the transition does limit overflow. \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵpropertyInterpolate(\"Image\", ctx.selected_post.url._url);\n      i0.ɵɵpropertyInterpolate(\"Title\", ctx.selected_post.title._title);\n      i0.ɵɵpropertyInterpolate(\"Description\", ctx.selected_post.description._description);\n      i0.ɵɵpropertyInterpolate(\"Author\", ctx.selected_post.author._author);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.CardDisplayComponent, i3.BasicModalComponent],\n  styles: [\".panel[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(4, 1fr);\\r\\n  grid-template-rows: masonry;\\r\\n  gap: 10px;\\r\\n  max-width: 1680px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n@media screen and (max-width:990px) {\\r\\n  .panel[_ngcontent-%COMP%] {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(4, 1fr);\\r\\n    grid-template-rows: masonry;\\r\\n    gap: 2rem;\\r\\n    max-width: 1680px;\\r\\n    width: 100%;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media screen and (max-width:770px) {\\r\\n  .panel[_ngcontent-%COMP%] {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr  1fr 1fr;\\r\\n    grid-template-rows: masonry;\\r\\n    gap: 1rem;\\r\\n    max-width: 1680px;\\r\\n    width: 100%;\\r\\n  }\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixxQ0FBcUM7RUFDckMsMkJBQTJCO0VBQzNCLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsV0FBVztBQUNiOztBQUVBO0VBQ0U7SUFDRSxhQUFhO0lBQ2IscUNBQXFDO0lBQ3JDLDJCQUEyQjtJQUMzQixTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLFdBQVc7RUFDYjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxhQUFhO0lBQ2IsbUNBQW1DO0lBQ25DLDJCQUEyQjtJQUMzQixTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLFdBQVc7RUFDYjtBQUNGIiwiZmlsZSI6ImhvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYW5lbCB7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxZnIpO1xyXG4gIGdyaWQtdGVtcGxhdGUtcm93czogbWFzb25yeTtcclxuICBnYXA6IDEwcHg7XHJcbiAgbWF4LXdpZHRoOiAxNjgwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6OTkwcHgpIHtcclxuICAucGFuZWwge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IG1hc29ucnk7XHJcbiAgICBnYXA6IDJyZW07XHJcbiAgICBtYXgtd2lkdGg6IDE2ODBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDo3NzBweCkge1xyXG4gIC5wYW5lbCB7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgIDFmciAxZnI7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IG1hc29ucnk7XHJcbiAgICBnYXA6IDFyZW07XHJcbiAgICBtYXgtd2lkdGg6IDE2ODBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufSJdfQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IAkBMA;IAGEA;MAAA;MAAA;MAAA;MAAA,OAAUA,+CAAV;IAA+B,CAA/B;IACDA;;;;;IAFCA;;;;ACbR,OAAM,MAAOC,aAAP,CAAoB;EAL1BC;IAME,qBAAsB;MACpBC,EAAE,EAAE,EADgB;MAEpBC,WAAW,EAAE;QAAEC,YAAY,EAAE;MAAhB,CAFO;MAGpBC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAV,CAHa;MAIpBC,MAAM,EAAE;QAAEC,OAAO,EAAE;MAAX,CAJY;MAKpBC,GAAG,EAAE;QAAEC,IAAI,EAAE;MAAR;IALe,CAAtB;IAQA,aAAgB,EAAhB;EAmBD;;EAjBCC,eAAe,CAACC,IAAD,EAAW;IACxB,KAAKC,aAAL,GAAqBD,IAArB;EACD;;EAEKE,QAAQ;IAAA;;IAAA;MACZ,MAAMC,QAAQ,GAAGC,KAAK,CAAC,8BAAD,EAAiC;QAAEC,MAAM,EAAE;MAAV,CAAjC,CAAtB;;MAEA,IAAI,CAAC,OAAOF,QAAP,EAAiBG,EAAtB,EAA0B;QACxB,MAAM,IAAIC,KAAJ,CAAU,kBAAkB,OAAOJ,QAAP,EAAiBK,MAAM,EAAnD,CAAN;MACD;;MAED,MAAMC,MAAM,GAAG,OAAON,QAAP,EAAiBO,IAAjB,EAAf;MAEA,MAAMD,MAAM,CAACE,IAAP,CAAaF,MAAD,IAAW;QAC3B,KAAI,CAACG,KAAL,GAAaH,MAAb;MACD,CAFK,CAAN;IATY;EAYb;;AA3BuB;;;mBAAbrB;AAAa;;;QAAbA;EAAayB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDN1B9B,gCAAgB,CAAhB,EAAgB,MAAhB;MAEIA,2BAAwB,CAAxB,EAAwB,MAAxB,EAAwB,CAAxB,EAAwB,CAAxB,EAAwB,MAAxB,EAAwB,CAAxB;MAGAA;MAAOA;MAAQA;MAEjBA;MAEEA;MAOAA;MACEA;MAKFA;MAEAA,gCAA6C,EAA7C,EAA6C,KAA7C,EAA6C,CAA7C,EAA6C,EAA7C,EAA6C,IAA7C,EAA6C,CAA7C,EAA6C,EAA7C,EAA6C,QAA7C,EAA6C,EAA7C;MAIQA;MACFA;MAEFA,iCAA+H,EAA/H,EAA+H,KAA/H,EAA+H,EAA/H,EAA+H,EAA/H,EAA+H,QAA/H;MAEYA;MAAwCA;MAAUA;MAAyWA;MAAMA;MAAeA;MAAOA;MACjcA;MAGJA,gCAA4B,EAA5B,EAA4B,IAA5B,EAA4B,EAA5B,EAA4B,EAA5B,EAA4B,QAA5B,EAA4B,EAA5B;MAGMA;MACFA;MAEFA,iCAA0H,EAA1H,EAA0H,KAA1H,EAA0H,EAA1H,EAA0H,EAA1H,EAA0H,QAA1H;MAEYA;MAAyCA;MAAUA;MAA0WA;MAAMA;MAAeA;MAAOA;MACncA;MAGJA,gCAA4B,EAA5B,EAA4B,IAA5B,EAA4B,EAA5B,EAA4B,EAA5B,EAA4B,QAA5B,EAA4B,EAA5B;MAGMA;MACFA;MAEFA,iCAA8H,EAA9H,EAA8H,KAA9H,EAA8H,EAA9H,EAA8H,EAA9H,EAA8H,QAA9H;MAEYA;MAAwCA;MAAUA;MAA0WA;MAAMA;MAAeA;MAAOA;MAClcA;;;;MAhDJA;MAAAA;MACAA;MACAA;MACAA;MAKmBA;MAAAA","names":["i0","HomeComponent","constructor","id","description","_description","title","_title","author","_author","url","_url","setSelectedPost","post","selected_post","ngOnInit","response","fetch","method","ok","Error","status","result","json","then","posts","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\lbsousa\\Angular\\Project1\\ClientApp\\src\\app\\home\\home.component.html","C:\\Users\\lbsousa\\Angular\\Project1\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n  </head>\r\n  <body>\r\n\r\n    <app-basic-modal \r\n      Image=\"{{selected_post.url._url}}\"\r\n      Title=\"{{selected_post.title._title}}\"\r\n      Description=\"{{selected_post.description._description}}\"\r\n      Author = \"{{selected_post.author._author}}\"\r\n    ></app-basic-modal>\r\n    \r\n    <div class=\"panel\">\r\n      <app-card-display\r\n        *ngFor=\"let post of posts\"\r\n        image=\"{{post.url._url}}\"\r\n        (click) =\"setSelectedPost(post)\"\r\n      ></app-card-display>\r\n    </div>\r\n\r\n    <div class=\"accordion\" id=\"accordionExample\">\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingOne\">\r\n          <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            Accordion Item #1\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n          <div class=\"accordion-body\">\r\n            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Accordion Item #2\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n          <div class=\"accordion-body\">\r\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"headingThree\">\r\n          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            Accordion Item #3\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n          <div class=\"accordion-body\">\r\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <script\r\n      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\r\n      integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\r\n      crossorigin=\"anonymous\"\r\n    ></script>\r\n  </body>\r\n</html>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent {\r\n  selected_post: Post = {\r\n    id: '',\r\n    description: { _description: '' },\r\n    title: { _title: '' },\r\n    author: { _author: '' },\r\n    url: { _url: '' },\r\n  };\r\n\r\n  posts: Post[] = [];\r\n\r\n  setSelectedPost(post: Post) {\r\n    this.selected_post = post;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const response = fetch('https://localhost:44492/home', { method: 'GET' });\r\n\r\n    if (!(await response).ok) {\r\n      throw new Error(`Error! status: ${(await response).status}`);\r\n    }\r\n\r\n    const result = (await response).json();\r\n\r\n    await result.then((result) => {\r\n      this.posts = result;\r\n    });\r\n  }\r\n}\r\n\r\ninterface Post {\r\n  id: string;\r\n  description: Description;\r\n  author: Author;\r\n  title: Title;\r\n  url: Url;\r\n}\r\n\r\ninterface Description {\r\n  _description: string;\r\n}\r\n\r\ninterface Author {\r\n  _author: string;\r\n}\r\n\r\ninterface Title {\r\n  _title: string;\r\n}\r\n\r\ninterface Url {\r\n  _url: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}