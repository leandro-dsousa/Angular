{"ast":null,"code":"import _classPrivateFieldInitSpec from \"C:/Users/lbsousa/Angular/Project1/ClientApp/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"C:/Users/lbsousa/Angular/Project1/ClientApp/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"C:/Users/lbsousa/Angular/Project1/ClientApp/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\n\nvar _lastModified, _name;\n\nlet _Symbol$toStringTag, _Symbol$hasInstance;\n\nimport Blob from './index.js';\n\nconst _File = (_lastModified = /*#__PURE__*/new WeakMap(), _name = /*#__PURE__*/new WeakMap(), _Symbol$toStringTag = Symbol.toStringTag, _Symbol$hasInstance = Symbol.hasInstance, class File extends Blob {\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */\n  // @ts-ignore\n  constructor(fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);\n    }\n\n    super(fileBits, options);\n\n    _classPrivateFieldInitSpec(this, _lastModified, {\n      writable: true,\n      value: 0\n    });\n\n    _classPrivateFieldInitSpec(this, _name, {\n      writable: true,\n      value: ''\n    });\n\n    if (options === null) options = {}; // Simulate WebIDL type casting for NaN value in lastModified option.\n\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified);\n\n    if (!Number.isNaN(lastModified)) {\n      _classPrivateFieldSet(this, _lastModified, lastModified);\n    }\n\n    _classPrivateFieldSet(this, _name, String(fileName));\n  }\n\n  get name() {\n    return _classPrivateFieldGet(this, _name);\n  }\n\n  get lastModified() {\n    return _classPrivateFieldGet(this, _lastModified);\n  }\n\n  get [_Symbol$toStringTag]() {\n    return 'File';\n  }\n\n  static [_Symbol$hasInstance](object) {\n    return !!object && object instanceof Blob && /^(File)$/.test(object[Symbol.toStringTag]);\n  }\n\n});\n/** @type {typeof globalThis.File} */\n// @ts-ignore\n\n\nexport const File = _File;\nexport default File;","map":{"version":3,"names":["Blob","_File","Symbol","toStringTag","hasInstance","File","constructor","fileBits","fileName","options","arguments","length","TypeError","lastModified","undefined","Date","now","Number","isNaN","String","name","object","test"],"sources":["C:/Users/lbsousa/Angular/Project1/node_modules/fetch-blob/file.js"],"sourcesContent":["import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,KAAK,0GAkCJC,MAAM,CAACC,WAlCH,wBAsCDD,MAAM,CAACE,WAtCN,EAAG,MAAMC,IAAN,SAAmBL,IAAnB,CAAwB;EAIpC;AACF;AACA;AACA;AACA;EAAK;EACHM,WAAW,CAAEC,QAAF,EAAYC,QAAZ,EAAsBC,OAAO,GAAG,EAAhC,EAAoC;IAC7C,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;MACxB,MAAM,IAAIC,SAAJ,CAAe,8DAA6DF,SAAS,CAACC,MAAO,WAA7F,CAAN;IACD;;IACD,MAAMJ,QAAN,EAAgBE,OAAhB;;IAJ6C;MAAA;MAAA,OAR/B;IAQ+B;;IAAA;MAAA;MAAA,OAPvC;IAOuC;;IAM7C,IAAIA,OAAO,KAAK,IAAhB,EAAsBA,OAAO,GAAG,EAAV,CANuB,CAQ7C;;IACA,MAAMI,YAAY,GAAGJ,OAAO,CAACI,YAAR,KAAyBC,SAAzB,GAAqCC,IAAI,CAACC,GAAL,EAArC,GAAkDC,MAAM,CAACR,OAAO,CAACI,YAAT,CAA7E;;IACA,IAAI,CAACI,MAAM,CAACC,KAAP,CAAaL,YAAb,CAAL,EAAiC;MAC/B,2CAAqBA,YAArB;IACD;;IAED,mCAAaM,MAAM,CAACX,QAAD,CAAnB;EACD;;EAEO,IAAJY,IAAI,GAAI;IACV,6BAAO,IAAP;EACD;;EAEe,IAAZP,YAAY,GAAI;IAClB,6BAAO,IAAP;EACD;;EAED,4BAA4B;IAC1B,OAAO,MAAP;EACD;;EAED,6BAA6BQ,MAA7B,EAAqC;IACnC,OAAO,CAAC,CAACA,MAAF,IAAYA,MAAM,YAAYrB,IAA9B,IACL,WAAWsB,IAAX,CAAgBD,MAAM,CAACnB,MAAM,CAACC,WAAR,CAAtB,CADF;EAED;;AAzCmC,CAA3B,CAAX;AA4CA;AAAqC;;;AACrC,OAAO,MAAME,IAAI,GAAGJ,KAAb;AACP,eAAeI,IAAf"},"metadata":{},"sourceType":"module"}